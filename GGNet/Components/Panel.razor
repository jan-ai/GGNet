@using System.Globalization
@using GGNet.Coords

@typeparam T
@typeparam TX
@typeparam TY

@{ 
    Render(firstRender);
    firstRender = false;
}

<GGNet.Components.Definitions.Panel ClipId=@clip Zone=@Zone/>

<rect x=@Area.X.ToString(CultureInfo.InvariantCulture)
      y=@Area.Y.ToString(CultureInfo.InvariantCulture)
      width=@Area.Width.ToString(CultureInfo.InvariantCulture)
      height=@Area.Height.ToString(CultureInfo.InvariantCulture)
      class="panel" />

<GGNet.Components.Labeling.Strip ClipId=@clip XStrip=Data.XStrip YStrip=Data.YStrip />

@if (Data.xAxis.Show)
{
    switch (Data.Data.Coord)
    {
        case Cartesian cartesian:
            <GGNet.Components.Labeling.CartesianXAxis ClipId=@clip Axis=@Data.xAxis Area=@Area Space=@XAxisSpace /> 
            break;
        case Polar polar:
            <GGNet.Components.Labeling.PolarXAxis ClipId=@clip Axis=@Data.xAxis Area=@Area Coord=@polar />
            break;
    }
}

@if (Data.yAxis.Show)
{
    switch (Data.Data.Coord)
    {
        case Cartesian cartesian:
            <GGNet.Components.Labeling.CartesianYAxis ClipId=@clip Axis=@Data.yAxis Area=@Area Space=@YAxisSpace />
           break;
        case Polar polar:
            <GGNet.Components.Labeling.PolarYAxis ClipId=@clip Axis=@Data.yAxis Area=@Area Coord=@polar />
            break;
    }
}

<Area T=T TX=TX TY=TY Data=@Data Zone=@Area Clip=@(clip + "-area") RenderPolicy=@areaPolicy/>

<GGNet.Components.Tooltips.Plot Id=@Plot.Id Coord=@Data.Data.Coord Area=@Area @ref=@tooltip />
